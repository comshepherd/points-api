plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.revolut.jooq-docker' version '0.3.9'
}

group = 'ru.datamatica'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

tasks {
    generateJooqClasses {
        basePackageName = "ru.datamatica.points.generated.jooq"
        excludeFlywayTable = true
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core:9.15.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.postgresql:postgresql'
//    implementation 'ch.hsr:geohash:1.4.0'
//    implementation 'com.github.davidmoten:geo:0.8.0'
    // https://mvnrepository.com/artifact/org.locationtech.spatial4j/spatial4j
//    implementation 'org.locationtech.spatial4j:spatial4j:0.8'
    // https://mvnrepository.com/artifact/com.uber/h3
    implementation 'com.uber:h3:4.1.1'
    // https://mvnrepository.com/artifact/com.google.geometry/s2-geometry
    implementation 'com.google.geometry:s2-geometry:2.0.0'




    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'

    jdbc 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

tasks.named('test') {
    useJUnitPlatform()
}
